plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'pmd'
	id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	compileOnly 'org.projectlombok:lombok'
	//developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.postgresql:postgresql:42.7.2'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.modelmapper:modelmapper:3.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.session:spring-session-jdbc'
	implementation 'com.github.imagekit-developer:imagekit-java:2.0.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	main {
		resources {
			srcDirs = ['src/main/resources']
		}
	}
}

// ✅ 1. PMD 플러그인 전역 설정 블록
// toolVersion, ignoreFailures 등은 여기에 작성합니다.
pmd {
	toolVersion = "6.55.0"
	ignoreFailures = true
	consoleOutput = true
}

// ✅ 2. PMD 태스크 개별 설정 블록
// ruleSets, reports 등은 여기에 작성합니다.
tasks.withType(Pmd).configureEach {
	classpath = sourceSets.main.compileClasspath

	reports {
		xml.required = false
		html.required = true
	}
	ruleSets = [
			"category/java/bestpractices.xml",
			"category/java/codestyle.xml",
			"category/java/errorprone.xml"
	]
}

spotless {
	// Java 소스 코드에 적용할 규칙을 정의합니다.
	java {
		googleJavaFormat()
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
	}
}