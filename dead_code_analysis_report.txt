================================================================================
                        백엔드 프로젝트 데드코드 분석 보고서
================================================================================
분석일: 2025-09-10
프로젝트: Portfolio Backend (Spring Boot)
총 Java 파일: 94개

================================================================================
1. 프로젝트 개요
================================================================================
- 언어: Java 21
- 프레임워크: Spring Boot 3.5.3
- 빌드 도구: Gradle
- 주요 기술: Spring Security, MyBatis, PostgreSQL, JWT, ImageKit
- 코드 품질 도구: PMD, Spotless

================================================================================
2. 데드코드 발견 사항 (우선순위별)
================================================================================

🔴 [HIGH] 보안 및 기능 오류 - 즉시 수정 필요
----------------------------------------
1. StatsController 보안 설정 누락
   - 파일: src/main/java/com/backend/controller/StatsController.java
   - 라인: 28, 42, 57, 66, 80, 92
   - 문제: 모든 @PreAuthorize("hasRole('ADMIN')") 주석 처리됨
   - 위험도: HIGH - 관리자 전용 API가 무방비 상태

2. UserStackController 경로 충돌
   - 파일: src/main/java/com/backend/controller/UserStackController.java
   - 라인: 18, 33
   - 문제: @GetMapping("/{userId}") 와 @GetMapping("/{username}") 충돌
   - 결과: username 엔드포인트 접근 불가

🟡 [MEDIUM] 데드코드 - 정리 권장
----------------------------------------
3. 완전 미사용 클래스
   - GuestbookResponseDTO
     * 파일: src/main/java/com/backend/domain/guestbook/GuestbookResponseDTO.java
     * 상태: MyBatis XML에서만 참조, Java 코드에서 미사용
   
   - WorkDetailListDTO
     * 파일: src/main/java/com/backend/domain/work/WorkDetailListDTO.java
     * 상태: 어디서도 참조되지 않음

4. 중복 설정
   - @MapperScan 어노테이션 3곳 중복:
     * BackendApplication.java:10
     * config/PostgresSQLConfig.java:15
     * test/BackendApplicationTests.java:8
   - 권장: 메인 애플리케이션 클래스에만 유지

🟢 [LOW] 미사용 imports - 선택적 정리
----------------------------------------
5. 미사용 Import 문
   - UserStackController.java:7 - import java.util.HashMap; (미사용)

6. 미노출 서비스 메소드
   - AboutMeDetailService 인터페이스의 일부 메소드들이 REST API로 노출되지 않음
   - updateSort(AboutMeDetailSortDTO dto)
   - deleteAllByAboutId(int aboutId)

================================================================================
3. 정상 동작하는 코드 영역
================================================================================
✅ 모든 Controller 클래스 - REST 매핑 정상
✅ 모든 Service 구현체 - 의존성 주입 정상  
✅ 모든 Mapper 인터페이스 - MyBatis 연동 정상
✅ Security 관련 클래스 - JWT, 인증/인가 정상
✅ 대부분의 DTO/VO - 요청/응답 처리에 활발히 사용
✅ Infrastructure 서비스 - UptimeRobotService, ImageKitService 정상

================================================================================
4. 의존성 사용 현황
================================================================================
✅ 사용 중인 주요 의존성:
- ModelMapper: GuestBookServiceImpl, CareerServiceImpl에서 사용
- Spring Security: 전체 인증/인가 시스템에서 활용
- MyBatis: 모든 데이터 접근 계층에서 사용
- JWT: 토큰 기반 인증에 사용
- ImageKit: 이미지 업로드 서비스에 사용
- PostgreSQL: 주 데이터베이스로 사용

================================================================================
5. 코드 품질 평가
================================================================================
전체 평점: B+ (양호)

강점:
- 명확한 레이어드 아키텍처 구조
- 일관된 네이밍 컨벤션
- 대부분의 코드가 활발히 사용됨
- 적절한 의존성 관리

개선점:
- 보안 설정 점검 필요
- 일부 데드코드 정리 필요
- API 엔드포인트 설계 보완

================================================================================
6. 권장 조치사항
================================================================================

즉시 처리 (1-2일 내):
□ StatsController 보안 어노테이션 복구
□ UserStackController 경로 충돌 해결

단기 처리 (1주일 내):
□ GuestbookResponseDTO 클래스 삭제
□ WorkDetailListDTO 클래스 삭제  
□ @MapperScan 중복 제거 (2곳에서 삭제)

선택적 처리:
□ 미사용 import 정리 (spotless 실행으로 자동 처리 가능)
□ AboutMeDetailService 미노출 메소드 검토

================================================================================
7. 실행 명령어
================================================================================
코드 포매팅: ./gradlew spotlessApply
코드 분석: ./gradlew pmd
테스트 실행: ./gradlew test
빌드: ./gradlew build

================================================================================
보고서 끝
================================================================================